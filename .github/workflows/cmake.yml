name: CMake

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        # Install dependencies
        run: sudo apt update && sudo apt install -y build-essential git openssl libssl-dev

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DLICENSEPP_BUILD_ALL_TESTS=ON -DLICENSEPP_TRAVIS_CI_BUILD=ON

      - name: Build
        working-directory: ${{github.workspace}}/build
        # Build your program with the given configuration
        run: cmake --build . --config ${{env.BUILD_TYPE}} -j $(nproc)

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-bin
          path: |
            build/bin/*